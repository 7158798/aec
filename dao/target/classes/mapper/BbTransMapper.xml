<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hengxunda.dao.mapper.BbTransMapper" >
  <resultMap id="BaseResultMap" type="com.hengxunda.dao.entity.BbTrans" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="bb_no" property="bbNo" jdbcType="VARCHAR" />
    <result column="bb_advert_id" property="bbAdvertId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
    <result column="trans_amount" property="transAmount" jdbcType="DECIMAL" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bb_no, bb_advert_id, user_id, unit_price, trans_amount, total_price, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hengxunda.dao.entity.BbTransExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_bb_trans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_bb_trans
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_bb_trans
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengxunda.dao.entity.BbTransExample" >
    delete from t_bb_trans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hengxunda.dao.entity.BbTrans" >
    insert into t_bb_trans (id, bb_no, bb_advert_id, 
      user_id, unit_price, trans_amount, 
      total_price, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{bbNo,jdbcType=VARCHAR}, #{bbAdvertId,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{unitPrice,jdbcType=DECIMAL}, #{transAmount,jdbcType=DECIMAL}, 
      #{totalPrice,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hengxunda.dao.entity.BbTrans" >
    insert into t_bb_trans
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bbNo != null" >
        bb_no,
      </if>
      <if test="bbAdvertId != null" >
        bb_advert_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="transAmount != null" >
        trans_amount,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bbNo != null" >
        #{bbNo,jdbcType=VARCHAR},
      </if>
      <if test="bbAdvertId != null" >
        #{bbAdvertId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="transAmount != null" >
        #{transAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengxunda.dao.entity.BbTransExample" resultType="java.lang.Integer" >
    select count(*) from t_bb_trans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_bb_trans
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bbNo != null" >
        bb_no = #{record.bbNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bbAdvertId != null" >
        bb_advert_id = #{record.bbAdvertId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPrice != null" >
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.transAmount != null" >
        trans_amount = #{record.transAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalPrice != null" >
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_bb_trans
    set id = #{record.id,jdbcType=VARCHAR},
      bb_no = #{record.bbNo,jdbcType=VARCHAR},
      bb_advert_id = #{record.bbAdvertId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      trans_amount = #{record.transAmount,jdbcType=DECIMAL},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengxunda.dao.entity.BbTrans" >
    update t_bb_trans
    <set >
      <if test="bbNo != null" >
        bb_no = #{bbNo,jdbcType=VARCHAR},
      </if>
      <if test="bbAdvertId != null" >
        bb_advert_id = #{bbAdvertId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="transAmount != null" >
        trans_amount = #{transAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengxunda.dao.entity.BbTrans" >
    update t_bb_trans
    set bb_no = #{bbNo,jdbcType=VARCHAR},
      bb_advert_id = #{bbAdvertId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      trans_amount = #{transAmount,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>